plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'com.diffplug.spotless' version '7.0.4'
}

group = 'com.halo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        xml.outputLocation = layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml")

        html.required = true
        html.outputLocation = layout.buildDirectory.dir("reports/jacoco/test/html")

        csv.required = false
    }
}

spotless {
    java {
        palantirJavaFormat()
        target 'src/**/*.java'

        importOrder 'java|javax', 'org', ' com.halo.eventer', '', '\\#'
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'


    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //db driver
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    //JWT
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"

    //Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //aws-s3
    implementation(platform("software.amazon.awssdk:bom:2.27.21"))
    implementation("software.amazon.awssdk:s3")

    //io
    implementation 'commons-io:commons-io:2.18.0'

    //ulid
    implementation 'com.github.f4b6a3:ulid-creator:5.2.3'

    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //prometheus-micrometer
    implementation 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
